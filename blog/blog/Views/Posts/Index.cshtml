@model IEnumerable<blog.Models.Posts>

@{
    ViewData["Title"] = "Posts";
}

<!-- Hero Section -->
<section class="hero">
    <div class="container">
        <h2 class="text-center">Latest Posts</h2>
        <p>Stay updated with the latest posts.</p>
    </div>
</section>

<!-- Search and Filter Section -->
<section class="search-section">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6 mb-3 mb-md-0">
                <form asp-action="Index" method="get">
                    <div class="input-group">
                        <input type="text" name="searchString" class="form-control" placeholder="Search for articles..." value="@ViewData["CurrentFilter"]">
                        <button class="btn btn-outline-secondary" type="submit"><i class="fas fa-search"></i></button>
                    </div>
                </form>
            </div>
            <div class="col-md-6">
                <form asp-action="Index" method="get">
                    <div class="input-group">
                        <select name="year" class="form-select">
                            <option value="">Filter by Year</option>
                            @foreach (var yearGroup in Model.GroupBy(p => p.CreatedAt.Year).OrderByDescending(g => g.Key))
                            {
                                <option value="@yearGroup.Key">@yearGroup.Key</option>
                            }
                        </select>
                        <select name="month" class="form-select ms-3">
                            <option value="">Filter by Month</option>
                            @foreach (var monthGroup in Model.GroupBy(p => p.CreatedAt.Month).OrderByDescending(g => g.Key))
                            {
                                <option value="@monthGroup.Key">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(monthGroup.Key)</option>
                            }
                        </select>
                        <select name="day" class="form-select ms-3">
                            <option value="">Filter by Day</option>
                            @foreach (var dayGroup in Model.GroupBy(p => p.CreatedAt.Day).OrderByDescending(g => g.Key))
                            {
                                <option value="@dayGroup.Key">@dayGroup.Key</option>
                            }
                        </select>
                        <button class="btn btn-outline-secondary ms-3" type="submit">Filter</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Navigation and Posts Section -->
<section class="navigation-section">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <nav class="nav flex-column">
                    <a asp-action="Create" class="btn btn-custom mt-3">Create Post</a>

                    @foreach (var yearGroup in Model.GroupBy(p => p.CreatedAt.Year).OrderByDescending(g => g.Key))
                    {
                        <a class="nav-link" href="#">@yearGroup.Key</a>
                        @foreach (var monthGroup in yearGroup.GroupBy(p => p.CreatedAt.Month).OrderByDescending(g => g.Key))
                        {
                            <a class="nav-link ms-3" href="#">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(monthGroup.Key)</a>
                        }
                    }
                </nav>
            </div>
            <div class="col-md-9">
                <div class="row justify-content-center">
                    @foreach (var item in Model)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card shadow rounded">
                                <div class="card-body">
                                    <a asp-action="Details" asp-route-id="@item.Id">
                                        <img class="card-img-top img-fluid mb-3" src="@item.Image" alt="@item.Content" id="postImage-@item.Id">
                                    </a>
                                    <p class="card-text">@item.Content</p>

                                    <!-- Botão de Like/Dislike -->
                                   @*  <form id="likeForm-@item.Id" asp-action="Like" asp-route-postId="@item.Id" method="post">
                                        <button id="likeButton-@item.Id" type="submit" class="btn btn-outline-primary btn-sm">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                var existingLike = item.Likes.FirstOrDefault(l => l.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier));
                                                if (existingLike != null && existingLike.PostId == item.Id)
                                                {
                                                    <i class="fas fa-thumbs-up"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-thumbs-up"></i>
                                                }
                                            }
                                            else
                                            {
                                                <i class="far fa-thumbs-up"></i>
                                            }
                                        </button>
                                        <span id="likeCount-@item.Id" class="ms-2">@item.LikeCount</span>
                                    </form> *@
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

